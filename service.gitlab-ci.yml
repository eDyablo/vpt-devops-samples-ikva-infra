include:
- file: helmfile-infra/service-pipeline.gitlab-ci.yml
  project: devops/tools/ci

variables:
  CONTAINER_IMAGE_BASE_NAME: ikva-service
  HELM_CHART_PROJECT_PATH: devops/samples/ikva/ikva-helmchart
  INFRA_PROJECT_PATH: devops/samples/ikva/ikva-infra

build container image:
  extends: .build container image job
  rules:
  - !reference [.build container image job, rules]
  - changes:
    - Dockerfile
  tags:
  - gtl-k8s-dev
  variables:
    CONTAINER_IMAGE_BUILD_ARGS: |-
      DOCKER_REGISTRY=${ARTIFACTORY_URL}/dkr

merge request:
  rules:
  - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
    when: never
  - when: on_success
  stage: .pre
  image: ${ARTIFACTORY_URL}/dkr/devops-tools-plain-job-runner
  script:
  - # Get merge requests
    - >-
      JQ_EXPRESSION=$(echo "
      .[]
      | select(.source_branch==\"${CI_COMMIT_REF_NAME}\"
      and .target_branch==\"${CI_DEFAULT_BRANCH}\")
      | .id
      ")
    - >- # https://curl.se/docs/manpage.html
      MERGE_REQUEST_IDS=$(
      curl
      --header "PRIVATE-TOKEN:${GITLAB_TOKEN}"
      --silent
      ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests?state=opened
      | jq -r "$JQ_EXPRESSION"
      )
  - # Create merge request if not exists yet
    - if [ -z "$MERGE_REQUEST_IDS" ]; then
    - |- # https://www.json.org
      CURL_DATA="{
      \"allow_collaboration\", false,
      \"project_id\": ${CI_PROJECT_ID},
      \"remove_source_branch\": true,
      \"source_branch\": \"${CI_COMMIT_REF_NAME}\",
      \"squash\": true,
      \"target_branch\": \"${CI_DEFAULT_BRANCH}\",
      \"title\": \"merge ${CI_COMMIT_REF_NAME} to ${CI_DEFAULT_BRANCH}\"
      }"
    - >- # https://curl.se/docs/manpage.html
      curl
      --data "$CURL_DATA"
      --fail-with-body
      --header "Content-Type: application/json"
      --header "PRIVATE-TOKEN:${GITLAB_TOKEN}"
      --request POST
      --silent
      ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/merge_requests
    - fi
